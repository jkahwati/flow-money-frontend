{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/jekahwati/my-workspace/flow-money-frontend/src/modules/login/containers/income.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport ApiConsumer from \"../consumer/api-consumer\";\n\nvar Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n\n    _this.register = function _callee() {\n      var apiConsumer, response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Registrando nuevo usuario');\n              apiConsumer = new ApiConsumer();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(apiConsumer.registerNewUser(_this.state.amount, _this.state.password, _this.state.description));\n\n            case 4:\n              response = _context.sent;\n\n              if (response.success) {\n                Alert.alert(response.message);\n\n                _this.props.navigation.navigate('Login');\n              } else {\n                Alert.alert(\"No fue posible registrar el usuario\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      amount: '',\n      description: ''\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ImageBackground, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.body, styles.negrita],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputTextStyle,\n        placeholder: \"Amount\",\n        onChangeText: function onChangeText(amount) {\n          return _this2.setState({\n            amount: amount\n          });\n        },\n        placeholderTextColor: \"black\",\n        maxLength: 20,\n        style: {\n          borderWidth: 2,\n          borderColor: 'black',\n          padding: 30,\n          marginTop: 20,\n          color: 'black',\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }), React.createElement(TextInput, {\n        style: {\n          color: \"blue\"\n        },\n        placeholder: \"Description\",\n        onChangeText: function onChangeText(description) {\n          return _this2.setState({\n            description: description\n          });\n        },\n        placeholderTextColor: \"black\",\n        maxLength: 20,\n        style: {\n          borderWidth: 2,\n          borderColor: 'black',\n          padding: 30,\n          marginTop: 20,\n          color: 'black',\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }), React.createElement(View, {\n        style: styles.buttonRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, React.createElement(Button, {\n        color: \"green\",\n        title: \"Registrar\",\n        style: {\n          fontSize: 50\n        },\n        onPress: this.register,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      })))), React.createElement(View, {\n        style: styles.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nvar styles = StyleSheet.create({\n  header: {\n    flex: 0.1,\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  list: {\n    paddingHorizontal: 5,\n    backgroundColor: \"#E6E6E6\"\n  },\n  inputTextStyle: {\n    color: 'blue'\n  },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 10\n  },\n  footer: {\n    flex: 0.1\n  },\n  logo: {\n    width: 60,\n    height: 60,\n    borderRadius: 50,\n    resizeMode: 'contain',\n    alignItems: 'center'\n  },\n  negrita: {\n    fontWeight: 'bold'\n  },\n  welcome: {\n    fontSize: 25,\n    color: 'white'\n  },\n  buttonLogin: {\n    marginTop: 20\n  },\n  buttonRegister: {\n    marginTop: 30\n  }\n});\nexport default Register;","map":{"version":3,"sources":["/home/jekahwati/my-workspace/flow-money-frontend/src/modules/login/containers/income.js"],"names":["React","Component","TextInput","ApiConsumer","Register","props","register","console","log","apiConsumer","registerNewUser","state","amount","password","description","response","success","Alert","alert","message","navigation","navigate","styles","body","negrita","inputTextStyle","setState","borderWidth","borderColor","padding","marginTop","color","fontSize","buttonRegister","footer","StyleSheet","create","header","flex","flexDirection","justifyContent","list","paddingHorizontal","backgroundColor","marginHorizontal","logo","width","height","borderRadius","resizeMode","alignItems","fontWeight","welcome","buttonLogin"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport  {View, Text, StyleSheet, Image, Button, Alert, ImageBackground, TouchableOpacity} from 'react-native'\nimport { TextInput } from 'react-native-gesture-handler'\nimport ApiConsumer from '../consumer/api-consumer'\n\nclass Register extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      amount: '',\n      description: '',\n      // description: ''\n    }\n    \n  }\n\n  register = async ()  => {\n    console.log('Registrando nuevo usuario')\n    var apiConsumer = new ApiConsumer();\n    let response = await apiConsumer.registerNewUser(this.state.amount, this.state.password, this.state.description)\n    if (response.success) {\n        Alert.alert(response.message);\n        this.props.navigation.navigate('Login')\n    } else {\n      Alert.alert(\"No fue posible registrar el usuario\")\n    }\n  }\n  \n\n\n  render(){\n    return (\n      <ImageBackground >  \n        <View style= {[styles.body,styles.negrita]}>\n          <TouchableOpacity>\n              <TextInput style= {styles.inputTextStyle} placeholder= 'Amount' onChangeText= {(amount) => this.setState({amount})} placeholderTextColor= 'black'\n              maxLength= {20} style= {{borderWidth: 2, borderColor: 'black', padding: 30, marginTop: 20 , color: 'black', fontSize: 20}} >\n              </TextInput>\n              <TextInput style= {{color: \"blue\"}} placeholder= 'Description' onChangeText= {(description) => this.setState({description})} placeholderTextColor= 'black'\n              maxLength= {20} style= {{borderWidth: 2, borderColor: 'black', padding: 30, marginTop: 20 , color: 'black', fontSize: 20}} >\n              </TextInput>\n              {/* <TextInput placeholder= 'Contraseña' onChangeText= {(password) => this.setState({password})} placeholderTextColor= 'white'\n              maxLength= {20} style= {{borderWidth: 1, borderColor: 'white', padding: 5, marginTop: 20 , color: 'white'}} >\n              </TextInput> */}\n              <View style= {styles.buttonRegister}>\n                  <Button color= 'green' title= \"Registrar\" style= {{fontSize: 50}} onPress= {this.register}></Button>\n              </View>\n\n          </TouchableOpacity>\n        </View>\n        <View style= {styles.footer}>\n          {/* <Text style= {styles.welcome} >Footer </Text> */}\n        </View>\n    </ImageBackground>\n\n      \n    )\n  }\n\n\n}\n\nconst styles = StyleSheet.create({\n  // container: {\n  //   flex: 1,\n  //   backgroundColor: 'gray',\n  //   flexDirection: 'column',\n  // },\n  header: {\n    flex: 0.1,\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'center'\n\n  },\n  list: {\n    paddingHorizontal: 5,\n    backgroundColor:\"#E6E6E6\",\n    // backgroundColor: 'blue'\n  },\n  inputTextStyle: {\n    color: 'blue'\n  },\n//   headerLeft: {\n//     flex: 1,\n//   },\n//   headerRight: {\n//     flex: 0.5,\n//     marginTop: 30,\n    \n//   },\n  body: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 10,\n  },\n  footer: {\n    flex: 0.1,\n    // backgroundColor: 'red'    \n  },\n  logo: {\n    width: 60,\n    height: 60,\n    borderRadius: 50,\n    resizeMode: 'contain',\n    alignItems: 'center'\n  },\n  negrita: {\n    fontWeight: 'bold'\n  },\n  welcome: {\n    fontSize: 25,\n    color: 'white'\n  },\n  buttonLogin: {\n    marginTop: 20\n  },\n  buttonRegister: {\n    marginTop: 30,\n  },\n})\n\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}