{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nvar URL = 'http://flow-money-backend.herokuapp.com/login';\nvar URL_SIGN_UP = 'http://flow-money-backend.herokuapp.com/sign-up';\nvar URL_USERS = 'http://flow-money-backend.herokuapp.com/users';\n\nvar ApiConsumer = function () {\n  function ApiConsumer() {\n    _classCallCheck(this, ApiConsumer);\n  }\n\n  _createClass(ApiConsumer, [{\n    key: \"registerNewUser\",\n    value: function registerNewUser(username, password, email) {\n      var response, json;\n      return _regeneratorRuntime.async(function registerNewUser$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Registrando nuevo usuario...', username, password, email);\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(URL_SIGN_UP, {\n                method: 'POST',\n                body: JSON.stringify({\n                  username: username,\n                  password: password,\n                  email: email\n                }),\n                headers: {\n                  'Content-Type': 'application/json',\n                  Accept: 'application/json'\n                }\n              }));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              json = _context.sent;\n              console.log(\"Status\", response.status);\n              console.log(\"Response from api\", json);\n              return _context.abrupt(\"return\", json);\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(\"Error->\", _context.t0);\n              Alert.alert(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 13]], Promise);\n    }\n  }, {\n    key: \"getBalance\",\n    value: function getBalance(username) {\n      var url, response, json;\n      return _regeneratorRuntime.async(function getBalance$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('Registrando nuevo usuario...', username, password, email);\n              _context2.prev = 1;\n              url = URL_USERS + \"/\" + username + \"/accounts\";\n              console.log(\"-->>>\", url);\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  Accept: 'application/json'\n                }\n              }));\n\n            case 6:\n              response = _context2.sent;\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 9:\n              json = _context2.sent;\n              console.log(\"Status\", response.status);\n              console.log(\"Response from api\", json);\n              return _context2.abrupt(\"return\", json);\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(\"Error->\", _context2.t0);\n              Alert.alert(_context2.t0);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 15]], Promise);\n    }\n  }, {\n    key: \"isUser\",\n    value: function isUser(username, password) {\n      var response, json;\n      return _regeneratorRuntime.async(function isUser$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log('Buscando usuario...', username, password);\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(fetch(URL, {\n                method: 'POST',\n                body: JSON.stringify({\n                  username: username,\n                  password: password\n                }),\n                headers: {\n                  'Content-Type': 'application/json',\n                  Accept: 'application/json'\n                }\n              }));\n\n            case 4:\n              response = _context3.sent;\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              json = _context3.sent;\n              console.log(\"Status\", response.status);\n              console.log(\"Response from api\", json);\n              return _context3.abrupt(\"return\", json);\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(\"Error->\", _context3.t0);\n              Alert.alert(_context3.t0);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 13]], Promise);\n    }\n  }]);\n\n  return ApiConsumer;\n}();\n\nexport default ApiConsumer;","map":{"version":3,"sources":["/home/jekahwati/my-workspace/flow-money-frontend/src/modules/login/consumer/api-consumer.js"],"names":["URL","URL_SIGN_UP","URL_USERS","ApiConsumer","username","password","email","console","log","fetch","method","body","JSON","stringify","headers","Accept","response","json","status","Alert","alert","url"],"mappings":"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","sourcesContent":["import { Alert } from \"react-native\"\n\nconst URL = 'http://flow-money-backend.herokuapp.com/login'\nconst URL_SIGN_UP = 'http://flow-money-backend.herokuapp.com/sign-up'\nconst URL_USERS = 'http://flow-money-backend.herokuapp.com/users'\n\nclass ApiConsumer {\n\n    constructor() {\n        \n    }\n\n    async registerNewUser(username, password, email) {\n        console.log('Registrando nuevo usuario...' , username, password, email);\n        try {   \n            let response = await fetch(URL_SIGN_UP, {\n                method: 'POST',\n                body: JSON.stringify({username, password, email}),\n                headers: {'Content-Type': 'application/json', Accept: 'application/json' }\n            })\n            let json = await response.json();\n            console.log(\"Status\", response.status)\n            console.log(\"Response from api\",json)\n            return json;\n        } catch (error) {\n            console.log(\"Error->\", error)\n            Alert.alert(error);\n        }\n    }\n\n    async getBalance(username) {\n        console.log('Registrando nuevo usuario...' , username, password, email);\n        try {   \n            const url = `${URL_USERS}/${username}/accounts`\n            console.log(\"-->>>\", url)\n            let response = await fetch(url, {\n                method: 'GET',\n                headers: {'Content-Type': 'application/json', Accept: 'application/json' }\n            })\n            let json = await response.json();\n            console.log(\"Status\", response.status)\n            console.log(\"Response from api\",json)\n            return json;\n        } catch (error) {\n            console.log(\"Error->\", error)\n            Alert.alert(error);\n        }\n    }\n\n\n    async isUser(username, password) {\n        console.log('Buscando usuario...',username, password)\n        try {   \n            let response = await fetch(URL, {\n                method: 'POST',\n                body: JSON.stringify({username, password}),\n                headers: {'Content-Type': 'application/json', Accept: 'application/json' }\n                \n            })\n            let json = await response.json();\n            console.log(\"Status\", response.status)\n            console.log(\"Response from api\",json)\n            return json;\n\n        } catch (error) {\n            console.log(\"Error->\", error)\n            Alert.alert(error);\n        }\n        \n    }\n\n}\n\nexport default ApiConsumer;"]},"metadata":{},"sourceType":"module"}